"use strict";(()=>{var e={};e.id=989,e.ids=[989],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4658:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>v,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var a={};t.r(a),t.d(a,{PUT:()=>p});var o=t(9303),s=t(8716),i=t(670),n=t(7070),d=t(5995);async function p(e,{params:r}){try{let t=parseInt(r.id);if(isNaN(t))return n.NextResponse.json({error:"Invalid order ID"},{status:400});let{status:a}=await e.json();if(!a||!["Pending","Prepared","Completed"].includes(a))return n.NextResponse.json({error:"Invalid status"},{status:400});let o=await d.Z.order.update({where:{id:t},data:{status:a},include:{items:!0}});return n.NextResponse.json(o)}catch(e){return console.error("Error updating order:",e),n.NextResponse.json({error:"Failed to update order status"},{status:500})}}let u=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/order/[id]/route",pathname:"/api/order/[id]",filename:"route",bundlePath:"app/api/order/[id]/route"},resolvedPagePath:"D:\\CST-canteen-webpage\\app\\api\\order\\[id]\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:m}=u,x="/api/order/[id]/route";function v(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}},5995:(e,r,t)=>{t.d(r,{Z:()=>o});var a=t(3524);let o=globalThis.prisma??new a.PrismaClient}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),a=r.X(0,[948,972],()=>t(4658));module.exports=a})();